--- old/bash-4.1/lib/sh/fpurge.c	2017-07-13 15:51:00 -0400
+++ new/bash-4.1/lib/sh/fpurge.c	2017-07-13 22:47:52 -0400
@@ -82,15 +82,22 @@
     }
   return 0;
 # elif defined __sferror || defined __DragonFly__ /* FreeBSD, NetBSD, OpenBSD, DragonFly, MacOS X, Cygwin */
-  fp_->_p = fp_->_bf._base;
-  fp_->_r = 0;
-  fp_->_w = ((fp_->_flags & (__SLBF | __SNBF | __SRD)) == 0 /* fully buffered and not currently reading? */
-	     ? fp_->_bf._size
-	     : 0);
+  fp->_p = fp->_bf._base;
+  fp->_r = 0;
+  fp->_w = ((fp->_flags & (__SLBF | __SNBF | __SRD)) == 0 /* fully buffered and not currently reading? */
+	    ? fp->_bf._size
+	    : 0);
   /* Avoid memory leak when there is an active ungetc buffer.  */
+#  if defined __NetBSD__ || defined __OpenBSD__ /* NetBSD, OpenBSD */
+   /* See <http://cvsweb.netbsd.org/bsdweb.cgi/src/lib/libc/stdio/fileext.h?rev=HEAD&content-type=text/x-cvsweb-markup>
+      and <http://www.openbsd.org/cgi-bin/cvsweb/src/lib/libc/stdio/fileext.h?rev=HEAD&content-type=text/x-cvsweb-markup> */
+#   define fp_ub ((struct { struct __sbuf _ub; } *) fp->_ext._base)->_ub
+#  else                                         /* FreeBSD, MacOS X, Cygwin */
+#   define fp_ub fp->_ub
+#  endif
   if (fp_ub._base != NULL)
     {
-      if (fp_ub._base != fp_->_ubuf)
+      if (fp_ub._base != fp->_ubuf)
 	free (fp_ub._base);
       fp_ub._base = NULL;
     }
